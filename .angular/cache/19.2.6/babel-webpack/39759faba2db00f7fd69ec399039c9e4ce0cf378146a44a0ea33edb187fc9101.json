{"ast":null,"code":"var _a, _b, _c;\nimport { __decorate, __metadata, __param } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, Self } from \"@angular/core\";\nimport { DatePipe, NgClass } from \"@angular/common\";\nimport { UserModel } from \"@core/models/user.model\";\nimport { ImagePreviewPipe } from \"@ux/pipes/image-preview.pipe\";\nimport * as moment from \"moment\";\nimport { getUserId } from \"@core/utils/getUserId\";\nlet AvatarComponent = class AvatarComponent {\n  set active(value) {\n    this._active = value;\n    this._setStyle();\n  }\n  set user(user) {\n    this._user = user;\n    this._setStyle();\n    this._setAvatarUrl();\n    this._setUserName();\n  }\n  get user() {\n    return this._user;\n  }\n  constructor(ngClass, imagePreviewPipe) {\n    this.ngClass = ngClass;\n    this.imagePreviewPipe = imagePreviewPipe;\n    this._active = false;\n    this.showDeleteBtn = false;\n    this.remove = new EventEmitter();\n    this._authUserId = getUserId();\n  }\n  ngOnInit() {}\n  get isOnline() {\n    if (!this.user) {\n      return false;\n    }\n    if (this.user.id === this._authUserId) {\n      return true;\n    }\n    const lastActiveDate = moment(this.user.activityAt).add(5, \"minutes\").valueOf();\n    const currentDate = moment().valueOf();\n    return lastActiveDate >= currentDate;\n  }\n  _setAvatarUrl() {\n    if (this._user && this._user.avatar) {\n      this.image = this.imagePreviewPipe.transform(this._user.avatar, 150, 150, true);\n    } else {\n      this.image = null;\n    }\n  }\n  _setUserName() {\n    if (this._user) {\n      this.shortUserName = this._user.firstName ? this._user.firstName[0] : \"?\";\n    } else {\n      this.shortUserName = null;\n    }\n  }\n  _setStyle() {\n    const classes = [];\n    if (this._user) {\n      classes.push(this._user.avatarCssStyle);\n    } else {\n      classes.push(\"avatar_bg-empty\");\n    }\n    if (this._active) {\n      classes.push(\"avatar_active\");\n    }\n    this.ngClass.ngClass = classes;\n    this.ngClass.ngDoCheck();\n  }\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AvatarComponent.prototype, \"showDeleteBtn\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AvatarComponent.prototype, \"remove\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], AvatarComponent.prototype, \"active\", null);\n__decorate([Input(), __metadata(\"design:type\", typeof (_b = typeof UserModel !== \"undefined\" && UserModel) === \"function\" ? _b : Object), __metadata(\"design:paramtypes\", [typeof (_c = typeof UserModel !== \"undefined\" && UserModel) === \"function\" ? _c : Object])], AvatarComponent.prototype, \"user\", null);\nAvatarComponent = __decorate([Component({\n  selector: \"ux-avatar\",\n  templateUrl: \"./avatar.component.html\",\n  styleUrls: [\"./avatar.component.less\"],\n  imports: [DatePipe],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}), __param(0, Self()), __metadata(\"design:paramtypes\", [NgClass, typeof (_a = typeof ImagePreviewPipe !== \"undefined\" && ImagePreviewPipe) === \"function\" ? _a : Object])], AvatarComponent);\nexport { AvatarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}