{"ast":null,"code":"import { HTTP_INTERCEPTORS, HttpClient, provideHttpClient, withFetch, withInterceptorsFromDi } from '@angular/common/http';\nimport { enableProdMode, importProvidersFrom, isDevMode } from '@angular/core';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { getAuth, provideAuth } from '@angular/fire/auth';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\nimport { getDatabase, provideDatabase } from '@angular/fire/database';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getStorage, provideStorage } from '@angular/fire/storage';\nimport { BrowserModule, provideClientHydration, withHttpTransferCacheOptions } from '@angular/platform-browser';\nimport { BrowserAnimationsModule, provideAnimations } from '@angular/platform-browser/animations';\nimport { PreloadAllModules, RouterModule, provideRouter, withViewTransitions } from '@angular/router';\nimport { provideServiceWorker } from '@angular/service-worker';\nimport { EffectsModule, provideEffects } from '@ngrx/effects';\nimport { StoreRouterConnectingModule, provideRouterStore, routerReducer } from '@ngrx/router-store';\nimport { StoreModule, provideStore } from '@ngrx/store';\nimport { provideStoreDevtools } from '@ngrx/store-devtools';\nimport { ImagesEffects } from '@layout/store/images-store/images.effects';\nimport { logoReducer } from '@layout/store/images-store/images.reducers';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { environment } from '../environments/environment.development';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\nimport { AuthEffects } from './layout/store/auth-store/auth.effects';\nimport { authReducer } from './layout/store/auth-store/auth.reducers';\nimport { darkModeReducer } from './layout/store/dark-mode-store/dark-mode.reducers';\nimport { experienceDialogReducer } from './layout/store/experience-dialog-store/experience-dialog.reducers';\nimport { FirebaseEffects } from './layout/store/firebase-store/firebase.effects';\nimport { firebaseReducer } from './layout/store/firebase-store/firebase.reducers';\nimport { GithubRepositoriesEffects } from './layout/store/github-projects-store/github-projects.effects';\nimport { githubRepositoriesReducer } from './layout/store/github-projects-store/github-projects.reducer';\nimport { languageReducer } from './layout/store/language-selector-store/language.reducers';\nimport { spinnerReducer } from './layout/store/spinner-store/spinner.reducer';\nimport { MAIN_ROUTES } from './main.routes';\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http, '/assets/i18n/', '.json');\n}\nif (environment.production) {\n  enableProdMode();\n}\nexport const appConfig = {\n  providers: [provideHttpClient(withInterceptorsFromDi(), withFetch()), provideAnimations(), provideRouter(MAIN_ROUTES, withViewTransitions()), provideFirebaseApp(() => initializeApp(environment.firebase)), provideFirestore(() => getFirestore()), provideDatabase(() => getDatabase()), provideStorage(() => getStorage()), provideAuth(() => getAuth()), provideStore(), provideHttpClient(), {\n    provide: TranslateLoader,\n    useFactory: HttpLoaderFactory,\n    deps: [HttpClient]\n  }, TranslateService, importProvidersFrom([AngularFireModule.initializeApp(environment.firebase), AngularFireDatabaseModule, BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(MAIN_ROUTES, {\n    preloadingStrategy: PreloadAllModules\n  }), StoreModule.forRoot({\n    router: routerReducer\n  }), TranslateModule.forRoot({\n    defaultLanguage: 'en',\n    loader: {\n      provide: TranslateLoader,\n      useFactory: HttpLoaderFactory,\n      deps: [HttpClient]\n    }\n  }), EffectsModule.forRoot({}), EffectsModule.forRoot([FirebaseEffects, AuthEffects, FirebaseEffects, AuthEffects, GithubRepositoriesEffects, ImagesEffects]), StoreModule.forFeature('logo', logoReducer), StoreModule.forFeature('spinner', spinnerReducer), StoreModule.forFeature('firebase', firebaseReducer), StoreModule.forFeature('darkMode', darkModeReducer), StoreModule.forFeature('language', languageReducer), StoreModule.forFeature('github', githubRepositoriesReducer), StoreModule.forFeature('experience', experienceDialogReducer), StoreModule.forFeature('auth', authReducer), StoreRouterConnectingModule.forRoot()]), {\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingInterceptor,\n    multi: true\n  }, provideClientHydration(withHttpTransferCacheOptions({\n    includePostRequests: true\n  })), provideStore({\n    router: routerReducer\n  }), provideEffects(), provideRouterStore(), provideStoreDevtools({\n    maxAge: 25,\n    logOnly: !isDevMode()\n  }), provideServiceWorker('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    registrationStrategy: 'registerWhenStable:30000'\n  }), provideServiceWorker('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    registrationStrategy: 'registerWhenStable:30000'\n  })]\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}