{"ast":null,"code":"import { __decorate, __metadata, __param } from \"tslib\";\nimport { Component, Self } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport * as fromRoot from \"./core/redux/index\";\nimport { Subscription } from \"rxjs\";\nimport { DeviceDetectorService } from \"ngx-device-detector\";\nimport { NgClass } from \"@angular/common\";\nlet AppComponent = class AppComponent {\n  constructor(ngClass, store, deviceService) {\n    this.ngClass = ngClass;\n    this.store = store;\n    this.deviceService = deviceService;\n    this.title = \"app\";\n    this.subscription$ = new Subscription();\n    this.subscription$.add(this.store.pipe(select(fromRoot.getUser)).subscribe(user => this.userIdentity = user));\n  }\n  ngOnInit() {\n    if (this.deviceService.os !== \"mac\" && this.deviceService.os !== \"android\") {\n      this.ngClass.ngClass = \"no-mac\";\n      this.ngClass.ngDoCheck();\n    }\n  }\n  ngOnDestroy() {\n    this.subscription$.unsubscribe();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  imports: {\n    RouterModule\n  },\n  styleUrls: [\"./app.component.less\"],\n  providers: [NgClass]\n}), __param(0, Self()), __metadata(\"design:paramtypes\", [NgClass, Store, DeviceDetectorService])], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}