{
  "ast": null,
  "code": "import { ApiService } from './api.service';\nimport { MessageModel } from '../models/message.model';\nimport 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService extends ApiService {\n    findAll(taskId) {\n      return this.http.get(this.getApiUrl(`messages?taskId=${taskId}`)).map(response => response.map(model => new MessageModel().setAttributes(model)));\n    }\n    create(model) {\n      return this.http.post(this.getApiUrl(`messages`), model).map(response => new MessageModel().setAttributes(response));\n    }\n    like(model) {\n      return this.http.put(this.getApiUrl(`messages/like/${model.id}`), {}).map(response => new MessageModel().setAttributes(response));\n    }\n    pin(model) {\n      return this.http.put(this.getApiUrl(`messages/pin/${model.id}`), {}).map(response => new MessageModel().setAttributes(response));\n    }\n    save(model) {\n      return this.http.put(this.getApiUrl(`messages/${model.id}`), model).map(response => new MessageModel().setAttributes(response));\n    }\n    destroy(model) {\n      return this.http.delete(this.getApiUrl(`messages/${model.id}`));\n    }\n    static #_ = (() => this.ɵfac = /*@__PURE__*/(() => {\n      let ɵMessageService_BaseFactory;\n      return function MessageService_Factory(__ngFactoryType__) {\n        return (ɵMessageService_BaseFactory || (ɵMessageService_BaseFactory = i0.ɵɵgetInheritedFactory(MessageService)))(__ngFactoryType__ || MessageService);\n      };\n    })())();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MessageService,\n      factory: MessageService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return MessageService;\n})();",
  "map": null,
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}
