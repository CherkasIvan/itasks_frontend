{"ast":null,"code":"import { ApiService } from './api.service';\nimport StringHelper from '../string.helper';\nimport FileHelper from '../file.helper';\nimport { HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport let FileService = /*#__PURE__*/(() => {\n  class FileService extends ApiService {\n    upload(file, forObject, taskId = null, objectId = null) {\n      const formData = new FormData();\n      formData.append('file', file, file.name);\n      formData.append('forObject', forObject);\n      if (objectId !== null) {\n        formData.append('objectId', objectId);\n      }\n      if (taskId !== null) {\n        formData.append('taskId', taskId);\n      }\n      const req = new HttpRequest('POST', this.getApiUrl('files'), formData, {\n        reportProgress: true\n      });\n      return this.http.request(req);\n    }\n    uploadAvatar(dataURI) {\n      const name = StringHelper.randomString() + '.png';\n      const body = new FormData();\n      const file = FileHelper.dataURItoBlob(dataURI);\n      body.append('file', file, name);\n      return this.http.post(this.getApiUrl('files/upload-avatar'), body);\n    }\n    getBlobFromUrl(url) {\n      return this.http.get(url, {\n        responseType: 'blob'\n      });\n    }\n    static #_ = (() => this.ɵfac = /*@__PURE__*/(() => {\n      let ɵFileService_BaseFactory;\n      return function FileService_Factory(__ngFactoryType__) {\n        return (ɵFileService_BaseFactory || (ɵFileService_BaseFactory = i0.ɵɵgetInheritedFactory(FileService)))(__ngFactoryType__ || FileService);\n      };\n    })())();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FileService,\n      factory: FileService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return FileService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}