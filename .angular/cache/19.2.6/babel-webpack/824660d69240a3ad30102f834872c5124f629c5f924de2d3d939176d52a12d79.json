{"ast":null,"code":"import { HttpClient, provideHttpClient, withInterceptorsFromDi, withFetch, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { enableProdMode, importProvidersFrom, isDevMode } from \"@angular/core\";\nimport { BrowserModule, provideClientHydration, withHttpTransferCacheOptions } from \"@angular/platform-browser\";\nimport { provideRouter, withViewTransitions, RouterModule, PreloadAllModules } from \"@angular/router\";\nimport { AuthEffects } from \"@core/redux/auth/auth.effects\";\nimport { EffectsModule, provideEffects } from \"@ngrx/effects\";\nimport { provideStore, StoreModule } from \"@ngrx/store\";\nimport { environment } from \"environments/environment\";\nimport { MAIN_ROUTES } from \"./app.routes\";\nif (environment.production) {\n  enableProdMode();\n}\nexport const appConfig = {\n  providers: [provideHttpClient(withInterceptorsFromDi(), withFetch()), provideRouter(MAIN_ROUTES, withViewTransitions()), provideFirebaseApp(() => initializeApp(environment.firebase)), provideFirestore(() => getFirestore()), provideDatabase(() => getDatabase()), provideStorage(() => getStorage()), provideAuth(() => getAuth()), provideStore(), provideHttpClient(), {\n    provide: TranslateLoader,\n    useFactory: HttpLoaderFactory,\n    deps: [HttpClient]\n  }, TranslateService, importProvidersFrom([AngularFireModule.initializeApp(environment.firebase), AngularFireDatabaseModule, BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(MAIN_ROUTES, {\n    preloadingStrategy: PreloadAllModules\n  }), StoreModule.forRoot({\n    router: routerReducer\n  }), TranslateModule.forRoot({\n    defaultLanguage: \"en\",\n    loader: {\n      provide: TranslateLoader,\n      useFactory: HttpLoaderFactory,\n      deps: [HttpClient]\n    }\n  }), EffectsModule.forRoot({}), EffectsModule.forRoot([FirebaseEffects, AuthEffects, FirebaseEffects, AuthEffects, GithubRepositoriesEffects, ImagesEffects]), StoreModule.forFeature(\"logo\", logoReducer), StoreModule.forFeature(\"spinner\", spinnerReducer), StoreModule.forFeature(\"firebase\", firebaseReducer), StoreModule.forFeature(\"darkMode\", darkModeReducer), StoreModule.forFeature(\"language\", languageReducer), StoreModule.forFeature(\"github\", githubRepositoriesReducer), StoreModule.forFeature(\"experience\", experienceDialogReducer), StoreModule.forFeature(\"auth\", authReducer), StoreRouterConnectingModule.forRoot()]), {\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingInterceptor,\n    multi: true\n  }, provideClientHydration(withHttpTransferCacheOptions({\n    includePostRequests: true\n  })), provideStore({\n    router: routerReducer\n  }), provideEffects(), provideRouterStore(), provideStoreDevtools({\n    maxAge: 25,\n    logOnly: !isDevMode()\n  }), provideServiceWorker(\"ngsw-worker.js\", {\n    enabled: !isDevMode(),\n    registrationStrategy: \"registerWhenStable:30000\"\n  }), provideServiceWorker(\"ngsw-worker.js\", {\n    enabled: !isDevMode(),\n    registrationStrategy: \"registerWhenStable:30000\"\n  })]\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}