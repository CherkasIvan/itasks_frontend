{"ast":null,"code":"import { TagActionTypes } from \"./tag.actions\";\nimport { createSelector } from \"@ngrx/store\";\nimport { createEntityAdapter } from \"@ngrx/entity\";\nexport const adapter = createEntityAdapter({\n  selectId: tag => tag.id,\n  sortComparer: false\n});\nexport const initialState = adapter.getInitialState({\n  loading: false\n});\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TagActionTypes.SearchSuccessAction:\n      {\n        return adapter.addMany(action.payload, state); // Используйте addMany вместо addAll\n      }\n    case TagActionTypes.SaveAction:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case TagActionTypes.CreateAction:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case TagActionTypes.CreateSuccessAction:\n      {\n        return adapter.addOne(action.payload, {\n          ...state,\n          loading: false\n        });\n      }\n    case TagActionTypes.SaveSuccessAction:\n      {\n        return adapter.upsertOne(action.payload, {\n          ...state,\n          loading: false\n        }); // Используйте upsertOne для обновления или добавления\n      }\n    case TagActionTypes.DeleteAction:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case TagActionTypes.DeleteSuccessAction:\n      {\n        return adapter.removeOne(action.payload, {\n          ...state,\n          loading: false\n        });\n      }\n    case TagActionTypes.TagClearAction:\n      {\n        return {\n          ...initialState\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport const getEntities = state => state.entities;\nexport const getLoading = state => state.loading;\nexport const getEntitiesArray = createSelector(getEntities, entities => {\n  return Object.values(entities).sort((a, b) => a.name > b.name ? 1 : -1);\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}