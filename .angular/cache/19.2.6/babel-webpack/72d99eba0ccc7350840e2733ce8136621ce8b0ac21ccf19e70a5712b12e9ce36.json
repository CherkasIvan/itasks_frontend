{"ast":null,"code":"import { NgZone, ChangeDetectorRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let TimeAgoPipe = /*#__PURE__*/(() => {\n  class TimeAgoPipe {\n    constructor(changeDetectorRef, ngZone) {\n      this.changeDetectorRef = changeDetectorRef;\n      this.ngZone = ngZone;\n    }\n    transform(value) {\n      this.removeTimer();\n      const d = new Date(value);\n      const now = new Date();\n      const seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));\n      const timeToUpdate = Number.isNaN(seconds) ? 1000 : this.getSecondsUntilUpdate(seconds) * 1000;\n      this.timer = this.ngZone.runOutsideAngular(() => {\n        if (typeof window !== 'undefined') {\n          return window.setTimeout(() => {\n            this.ngZone.run(() => this.changeDetectorRef.markForCheck());\n          }, timeToUpdate);\n        }\n        return null;\n      });\n      const minutes = Math.round(Math.abs(seconds / 60));\n      const hours = Math.round(Math.abs(minutes / 60));\n      const days = Math.round(Math.abs(hours / 24));\n      // const months = Math.round(Math.abs(days / 30.416));\n      // const years = Math.round(Math.abs(days / 365));\n      if (Number.isNaN(seconds)) {\n        return '';\n      } else if (seconds <= 45) {\n        return 'несколько секунд назад'; //a few seconds ago\n      } else if (seconds <= 90) {\n        return 'минуту назад'; //a minute ago\n      } else if (minutes <= 45) {\n        return minutes + ' минут назад'; //minutes ago\n      } else if (minutes <= 90) {\n        return 'час назад'; //an hour ago\n      } else if (hours <= 22) {\n        return hours + ' часов назад'; //hours ago\n      } else if (hours <= 36) {\n        return 'день назад'; //a day ago\n      } else {\n        return d.toLocaleString('ru', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          weekday: 'short',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: 'numeric'\n        });\n      }\n      // if (days <= 25) {\n      // return days + ' days ago';\n      // } else if (days <= 45) {\n      //   return 'a month ago';\n      // } else if (days <= 345) {\n      //   return months + ' months ago';\n      // } else if (days <= 545) {\n      //   return 'a year ago';\n      // } else { // (days > 545)\n      //   return years + ' years ago';\n      // }\n    }\n    ngOnDestroy() {\n      this.removeTimer();\n    }\n    removeTimer() {\n      if (this.timer) {\n        window.clearTimeout(this.timer);\n        this.timer = null;\n      }\n    }\n    getSecondsUntilUpdate(seconds) {\n      const min = 60;\n      const hr = min * 60;\n      const day = hr * 24;\n      if (seconds < min) {\n        // less than 1 min, update every 2 secs\n        return 2;\n      } else if (seconds < hr) {\n        // less than an hour, update every 30 secs\n        return 30;\n      } else if (seconds < day) {\n        // less then a day, update every 5 mins\n        return 300;\n      } else {\n        // update every hour\n        return 3600;\n      }\n    }\n    static #_ = (() => this.ɵfac = function TimeAgoPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TimeAgoPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n    })();\n    static #_2 = (() => this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"timeAgo\",\n      type: TimeAgoPipe,\n      pure: false\n    }))();\n  }\n  return TimeAgoPipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}