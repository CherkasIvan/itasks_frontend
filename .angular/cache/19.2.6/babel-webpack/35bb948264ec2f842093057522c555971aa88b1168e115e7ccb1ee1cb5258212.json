{"ast":null,"code":"import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { environment } from '../../../environments/environment';\nimport * as fromProject from './project/project.reducer';\nimport * as fromPopup from './popup/popup.reducer';\nimport * as fromLayout from './layout/layout.reducer';\nimport * as fromAuth from './auth/auth.reducer';\nimport * as fromStatus from './status/status.reducer';\nimport * as fromTask from './task/task.reducer';\nimport * as fromMessage from './message/message.reducer';\nimport * as fromInvite from './invite/invite.reducer';\nimport * as fromTag from './tag/tag.reducer';\nimport * as fromFilter from './filter/filter.reducer';\nexport const reducers = {\n  layout: fromLayout.reducer,\n  popup: fromPopup.reducer,\n  project: fromProject.reducer,\n  auth: fromAuth.reducer,\n  status: fromStatus.reducer,\n  task: fromTask.reducer,\n  message: fromMessage.reducer,\n  invite: fromInvite.reducer,\n  tag: fromTag.reducer,\n  filter: fromFilter.reducer\n};\nexport function localStorageSyncReducer(reducer) {\n  return localStorageSync({\n    keys: ['layout', 'auth'],\n    rehydrate: true\n  })(reducer);\n}\nexport const metaReducers = !environment.production ? [localStorageSyncReducer] : [localStorageSyncReducer];\n/**\n * Project Reducers\n */\nexport const getProjectState = createFeatureSelector('project');\nexport const getProjectEntities = createSelector(getProjectState, fromProject.getEntitiesArray);\nexport const getProjectActiveEntities = createSelector(getProjectState, fromProject.getActiveEntities);\nexport const getProjectArchiveEntities = createSelector(getProjectState, fromProject.getArchiveEntities);\nexport const getProjectSelectedId = createSelector(getProjectState, fromProject.getSelectedId);\nexport const getProjectSelectedIdForUpdate = createSelector(getProjectState, fromProject.getSelectedIdForUpdate);\nexport const getProjectSelectedEntityForUpdate = createSelector(getProjectState, fromProject.getSelectedEntityForUpdate);\nexport const getProjectLoading = createSelector(getProjectState, fromProject.getLoading);\n/**\n * Status Reducers\n */\nexport const getStatusState = createFeatureSelector('status');\nexport const getStatusEntities = createSelector(getStatusState, fromStatus.getEntitiesArray);\nexport const getStatusSelectedIdForUpdate = createSelector(getStatusState, fromStatus.getSelectedIdForUpdate);\nexport const getStatusSelectedEntityForUpdate = createSelector(getStatusState, fromStatus.getSelectedEntityForUpdate);\nexport const getStatusLoading = createSelector(getStatusState, fromStatus.getLoading);\nexport const getStatusBackLog = createSelector(getStatusState, fromStatus.getBackLog);\n/**\n * Task Reducers\n */\nexport const getTaskState = createFeatureSelector('task');\nexport const getTaskEntities = createSelector(getTaskState, fromTask.getEntitiesArray);\nexport const getTaskLoading = createSelector(getTaskState, fromTask.getLoading);\nexport const getTaskLoadingOrder = createSelector(getTaskState, fromTask.getLoadingOrder);\nexport const getTaskEntitiesByStatus = statusId => createSelector(getTaskState, fromTask.getEntitiesArrayByStatusId(statusId));\nexport const getTaskOpen = createSelector(getTaskState, fromTask.getOpen);\nexport const getTaskSelectedId = createSelector(getTaskState, fromTask.getSelectedId);\nexport const getFavoritesTask = createSelector(getTaskState, fromTask.getEntitiesFavoritesArray);\nexport const getNotificationsTask = createSelector(getTaskState, fromTask.getEntitiesNotificationsArray);\n/**\n * Message Reducers\n */\nexport const getMessageState = createFeatureSelector('message');\nexport const getMessageEntitiesByTask = taskId => createSelector(getMessageState, fromMessage.getEntitiesArrayByTaskId(taskId));\nexport const getMessageEntitiesPenned = createSelector(getMessageState, fromMessage.getEntitiesArrayPinned);\nexport const getMessageEdit = createSelector(getMessageState, fromMessage.getEntityEdit);\n/**\n * Layout Reducers\n */\nexport const getLayoutState = createFeatureSelector('layout');\nexport const getShowSidebar = createSelector(getLayoutState, fromLayout.getShowSidebar);\nexport const getShowSidebarFavorite = createSelector(getLayoutState, fromLayout.getShowSidebarFavorite);\nexport const getShowSidebarChat = createSelector(getLayoutState, fromLayout.getShowSidebarChat);\nexport const getShowSidebarFilter = createSelector(getLayoutState, fromLayout.getShowSidebarFilter);\nexport const getShowBackLog = createSelector(getLayoutState, fromLayout.getShowBackLog);\n/**\n * Popup Reducers\n */\nexport const getPopupState = createFeatureSelector('popup');\nexport const getPopupProjectMenu = createSelector(getPopupState, fromPopup.getPopupProjectMenu);\nexport const getPopupProjectForm = createSelector(getPopupState, fromPopup.getPopupProjectForm);\n/**\n * Auth Reducers\n */\nexport const getAuthState = createFeatureSelector('auth');\nexport const getIsAuth = createSelector(getAuthState, fromAuth.getIsAuth);\nexport const getStep = createSelector(getAuthState, fromAuth.getStep);\nexport const getToken = createSelector(getAuthState, fromAuth.getToken);\nexport const getAuthErrors = createSelector(getAuthState, fromAuth.getErrors);\nexport const getLoading = createSelector(getAuthState, fromAuth.getLoading);\nexport const getUser = createSelector(getAuthState, fromAuth.getUser);\nexport const getUserCanAdmin = createSelector(getAuthState, fromAuth.getCanAdmin);\n/**\n * Invite Reducers\n */\nexport const getInviteState = createFeatureSelector('invite');\nexport const getInviteIds = createSelector(getInviteState, fromInvite.getIds);\nexport const getInviteEntities = createSelector(getInviteState, fromInvite.getEntitiesArray);\nexport const getInviteActiveEntities = createSelector(getInviteState, fromInvite.getEntitiesActive);\nexport const getInviteNoDeleteEntities = createSelector(getInviteState, fromInvite.getEntitiesNoDelete);\nexport const getInviteErrors = createSelector(getInviteState, fromInvite.getErrors);\nexport const getInviteLoading = createSelector(getInviteState, fromInvite.getLoading);\n/**\n * Tag Reducers\n */\nexport const getTagState = createFeatureSelector('tag');\nexport const getTagEntities = createSelector(getTagState, fromTag.getEntitiesArray);\n/**\n * Filter Reducers\n */\nexport const getFilterState = createFeatureSelector('filter');\nexport const getFilterEntities = createSelector(getFilterState, fromFilter.getEntitiesArray);\nexport const getFilterSelect = createSelector(getFilterState, fromFilter.getSelectedEntity);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}