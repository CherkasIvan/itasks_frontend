{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { CabinetComponent } from \"../../cabinet.component\";\nimport * as fromRoot from \"@core/redux/index\";\nimport * as LayoutAction from \"@core/redux/layout/layout.actions\";\nimport { Subscription } from \"rxjs\";\nimport { FastSearchComponent } from \"../fast-search/fast-search.component\";\nimport { MenuComponent } from \"../menu/menu.component\";\nimport { AvatarComponent } from \"@ux/components/avatar/avatar.component\";\nlet HeaderComponent = class HeaderComponent {\n  constructor(store, cabinetComponent) {\n    this.store = store;\n    this.cabinetComponent = cabinetComponent;\n    this.subscription$ = new Subscription();\n    this.isOpenMenu = false;\n    this.subscription$.add(this.store.pipe(select(fromRoot.getUser)).subscribe(user => this.user = user));\n  }\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.subscription$.unsubscribe();\n  }\n  onToggleSidebar() {\n    this.store.dispatch(new LayoutAction.OpenSidebar());\n  }\n  onToggleMenu() {\n    this.isOpenMenu = !this.isOpenMenu;\n  }\n  onClose() {\n    this.isOpenMenu = false;\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.less\"],\n  imports: [FastSearchComponent, MenuComponent, AvatarComponent],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}), __metadata(\"design:paramtypes\", [Store, CabinetComponent])], HeaderComponent);\nexport { HeaderComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}