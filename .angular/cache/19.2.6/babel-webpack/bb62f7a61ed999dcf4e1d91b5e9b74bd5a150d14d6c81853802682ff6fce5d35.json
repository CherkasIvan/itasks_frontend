{"ast":null,"code":"import { ActivatedRoute, Router, RouterModule } from \"@angular/router\";\nimport { Store, select } from \"@ngrx/store\";\nimport { filter, map } from \"rxjs/operators\";\nimport { SocketService } from \"@core/services/socket.service\";\nimport { MessageService } from \"@core/services/message.service\";\n// import {ElectronService} from '@core/services/electron.service';\nimport * as fromRoot from \"@core/redux/index\";\nimport * as ProjectActions from \"@core/redux/project/project.actions\";\nimport * as StatusActions from \"@core/redux/status/status.actions\";\nimport * as TagActions from \"@core/redux/tag/tag.actions\";\nimport * as TaskActions from \"@core/redux/task/task.actions\";\nimport * as InviteActions from \"@core/redux/invite/invite.actions\";\nimport * as FilterActions from \"@core/redux/filter/filter.actions\";\nimport \"rxjs/add/operator/filter\";\nimport { ImageService } from \"@core/services/image/image.service\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport * as AuthActions from \"@core/redux/auth/auth.actions\";\nimport { AsyncPipe, NgSwitch } from \"@angular/common\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@core/services/socket.service\";\nimport * as i3 from \"@core/services/message.service\";\nimport * as i4 from \"@core/services/image/image.service\";\nimport * as i5 from \"@angular/router\";\nconst _c0 = a0 => ({\n  \"bottom.px\": a0\n});\nconst _c1 = (a0, a1) => ({\n  \"top.px\": a0,\n  \"left.px\": a1\n});\nfunction CabinetComponent_app_sidebar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-sidebar\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"@enterAnimation\", undefined);\n  }\n}\nfunction CabinetComponent_app_sidebar_filter_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-sidebar-filter\", 14);\n  }\n}\nfunction CabinetComponent_app_sidebar_user_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-sidebar-user\", 15);\n  }\n}\nfunction CabinetComponent_app_project_menu_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-project-menu\", 16);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, i0.ɵɵpipeBind1(1, 1, ctx_r0.popupProjectMenu$).position));\n  }\n}\nfunction CabinetComponent_app_project_form_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-project-form\", 17);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(5, _c1, i0.ɵɵpipeBind1(1, 1, ctx_r0.popupProjectForm$).top, i0.ɵɵpipeBind1(2, 3, ctx_r0.popupProjectForm$).left));\n  }\n}\nfunction CabinetComponent_ux_image_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ux-image\");\n  }\n}\nexport let CabinetComponent = /*#__PURE__*/(() => {\n  class CabinetComponent {\n    /**\n     *\n     * @param {Store<State>} store\n     * @param {SocketService} socket\n     * @param {MessageService} messageService\n     // * @param {ElectronService} electronService\n     * @param {SocketService} socketService\n     * @param {Router} router\n     * @param {ActivatedRoute} route\n     */\n    constructor(store, socket, messageService,\n    // private electronService: ElectronService,\n    imageService, router, route) {\n      this.store = store;\n      this.socket = socket;\n      this.messageService = messageService;\n      this.imageService = imageService;\n      this.router = router;\n      this.route = route;\n      /** Подписки */\n      this.subscription$ = new Subscription();\n      this.isShowSidebar$ = store.pipe(select(fromRoot.getShowSidebar));\n      this.isShowSidebarFilter$ = store.pipe(select(fromRoot.getShowSidebarFilter));\n      this.popupProjectMenu$ = store.pipe(select(fromRoot.getPopupProjectMenu));\n      this.popupProjectForm$ = store.pipe(select(fromRoot.getPopupProjectForm));\n      this.projectList$ = store.pipe(select(fromRoot.getProjectActiveEntities));\n      this.statusList$ = store.pipe(select(fromRoot.getStatusEntities));\n      this.inviteList$ = store.pipe(select(fromRoot.getInviteActiveEntities));\n      this.subscription$.add(this.store.pipe(select(fromRoot.getTaskSelectedId)).subscribe(id => this.taskOpenId = id));\n      // Получаем из стора ID проекта, загружаем данные и подписываемся на получение пользователей онлайн для проекта\n      this.subscription$.add(store.pipe(select(fromRoot.getProjectSelectedId)).subscribe(id => {\n        this.projectSelectedId = id;\n        setTimeout(() => {\n          this._initData();\n          this.socket.listenOnline(id);\n        });\n      }));\n      // Как только авторизовались подписываемся на сокет\n      this.subscription$.add(store.pipe(select(fromRoot.getToken), filter(token => !!token)).subscribe(token => {\n        this.socket.listen(token);\n      }));\n      // Подписываемся на роутинг params\n      this.subscription$.add(route.params.pipe(map(params => params.projectId),\n      // Используйте map вместо pluck\n      filter(projectId => !!projectId)).subscribe(projectId => {\n        this.store.dispatch(new ProjectActions.SelectAction(projectId));\n      }));\n      // Если это APP\n      // if (electronService.isElectron()) {\n      //   this\n      //     .subscription$\n      //     .add(store\n      //       .pipe(select(fromRoot.getNotificationsTask))\n      //       .subscribe((tasks) => {\n      //         this._updateBadge(tasks);\n      //       }));\n      //\n      //   // Как только возобновили апп из дока сразу загружаем все данные с апи\n      //   this\n      //     .electronService\n      //     .remote\n      //     .powerMonitor\n      //     .on('resume', () => {\n      //       if (this.projectSelectedId) {\n      //         this._initData();\n      //       }\n      //     });\n      // }\n    }\n    ngOnInit() {\n      this.store.dispatch(new ProjectActions.SearchAction());\n    }\n    ngOnDestroy() {\n      this.subscription$.unsubscribe();\n    }\n    /**\n     * Обновление badge в MacOs\n     * @param tasks\n     * @private\n     */\n    _updateBadge(tasks) {\n      let count = 0;\n      if (tasks) {\n        tasks.forEach(task => {\n          count += task.countNotifications;\n        });\n      }\n      // this.electronService.remote.app.dock.setBadge(count ? count.toString() : '');\n    }\n    /**\n     * Инициализация загрузки данных\n     * @private\n     */\n    _initData() {\n      this.store.dispatch(new AuthActions.GetUserAction());\n      this.store.dispatch(new FilterActions.SearchAction());\n      this.store.dispatch(new TagActions.SearchAction());\n      this.store.dispatch(new StatusActions.SearchAction());\n      this.store.dispatch(new TaskActions.SearchFavoriteAction());\n      this.store.dispatch(new TaskActions.SearchNotificationAction());\n      this.store.dispatch(new InviteActions.SearchAction({}));\n    }\n    static #_ = (() => this.ɵfac = function CabinetComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CabinetComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.SocketService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.ImageService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CabinetComponent,\n      selectors: [[\"app-cabinet\"]],\n      decls: 19,\n      vars: 15,\n      consts: [[1, \"cabinet\"], [\"class\", \"cabinet__sidebar\", 4, \"ngIf\"], [1, \"cabinet__wrapper\"], [1, \"cabinet__content\"], [1, \"cabinet__work\"], [1, \"cabinet__sidebar-left\", 3, \"ngSwitch\"], [\"class\", \"cabinet__sidebar-filter\", 4, \"ngSwitchCase\"], [\"class\", \"cabinet__sidebar-user\", 4, \"ngSwitchCase\"], [\"name\", \"task\"], [\"name\", \"popup\"], [3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"project-menu__project-form\", 3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"cabinet__sidebar\"], [1, \"cabinet__sidebar-filter\"], [1, \"cabinet__sidebar-user\"], [3, \"ngStyle\"], [1, \"project-menu__project-form\", 3, \"ngStyle\"]],\n      template: function CabinetComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, CabinetComponent_app_sidebar_1_Template, 1, 1, \"app-sidebar\", 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵelement(4, \"app-header\");\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4);\n          i0.ɵɵelement(7, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 5);\n          i0.ɵɵpipe(9, \"async\");\n          i0.ɵɵtemplate(10, CabinetComponent_app_sidebar_filter_10_Template, 1, 0, \"app-sidebar-filter\", 6)(11, CabinetComponent_app_sidebar_user_11_Template, 1, 0, \"app-sidebar-user\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"router-outlet\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(13, \"router-outlet\", 9);\n          i0.ɵɵtemplate(14, CabinetComponent_app_project_menu_14_Template, 2, 5, \"app-project-menu\", 10);\n          i0.ɵɵpipe(15, \"async\");\n          i0.ɵɵtemplate(16, CabinetComponent_app_project_form_16_Template, 3, 8, \"app-project-form\", 11);\n          i0.ɵɵpipe(17, \"async\");\n          i0.ɵɵtemplate(18, CabinetComponent_ux_image_18_Template, 1, 0, \"ux-image\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 7, ctx.isShowSidebar$));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngSwitch\", i0.ɵɵpipeBind1(9, 9, ctx.isShowSidebarFilter$));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngSwitchCase\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(15, 11, ctx.popupProjectMenu$).isOpen);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(17, 13, ctx.popupProjectForm$).isOpen);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.imageService.isOpen);\n        }\n      },\n      dependencies: [NgSwitch, RouterModule, i5.RouterOutlet, HeaderComponent, AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:block;height:100%}[_nghost-%COMP%]   .cabinet[_ngcontent-%COMP%]{display:flex;height:100%}[_nghost-%COMP%]   .cabinet__wrapper[_ngcontent-%COMP%]{height:100%;flex:1 1 auto;overflow:hidden;position:relative}[_nghost-%COMP%]   .cabinet__content[_ngcontent-%COMP%]{height:calc(100% - 50px);width:100%;display:flex}[_nghost-%COMP%]   .cabinet__work[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;flex:1 1 auto;overflow:hidden}[_nghost-%COMP%]   .cabinet__sidebar-left[_ngcontent-%COMP%]{margin-left:auto}\"],\n      data: {\n        animation: [trigger(\"enterAnimation\", [transition(\":enter\", [style({\n          marginLeft: -220\n        }), animate(\"152ms ease-in\", style({\n          marginLeft: 0\n        }))]), transition(\":leave\", [style({\n          marginLeft: 0\n        }), animate(\"152ms ease-out\", style({\n          marginLeft: -220\n        }))])])]\n      },\n      changeDetection: 0\n    }))();\n  }\n  return CabinetComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}